# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AppConfigInput {
  createdAt: DateTime!
  desc: String
  initialValue: String!
  name: String!
  type: AppConfigTypeScalar!
  updatedAt: DateTime!
  userAppConfigs: [UserAppConfigsInput!]
  validate: [ValidatorScalar!]!
}

type AppConfigObject {
  createdAt: DateTime!
  desc: String
  initialValue: String!
  name: String!
  type: AppConfigTypeScalar!
  updatedAt: DateTime!
  userAppConfigs: [UserAppConfigsObject!]
  validate: [ValidatorScalar!]!
}

""""""
scalar AppConfigTypeScalar

input BusinessCodeInput {
  children: [BusinessCodeInput!]
  code: String!
  createdAt: DateTime!
  desc: String
  fullName: String!
  parentCode: BusinessCodeInput
  updatedAt: DateTime!
}

type BusinessCodeObject {
  children: [BusinessCodeObject!]
  code: String!
  createdAt: DateTime!
  desc: String
  fullName: String!
  parentCode: BusinessCodeObject
  updatedAt: DateTime!
}

input CreateAppConfigInput {
  desc: String
  initialValue: String!
  name: String!
  type: AppConfigTypeScalar!
  userAppConfigs: [UserAppConfigsInput!]
  validate: [ValidatorScalar!]!
}

input CreateBusinessCodeInput {
  children: [BusinessCodeInput!]
  code: String!
  desc: String
  fullName: String!
  parentCode: BusinessCodeInput
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

input ListBusinessCodeInput {
  children: [BusinessCodeInput!]
  code: String
  createdAt: DateTime
  desc: String
  fullName: String
  parentCode: BusinessCodeInput
  updatedAt: DateTime
}

input ListMsgCodeInput {
  code: String
  createdAt: DateTime
  desc: String
  explanation: String
  msg: String
  updatedAt: DateTime
}

input LoginInput {
  profileObj: ProfileObjInput!
  tokenObj: TokenObjInput!
}

type LoginObj {
  profileObj: ProfileObj!
  tokenObj: TokenObj!
  user: UserObject!
}

input MenuInput {
  children: [MenuInput!]
  createdAt: DateTime!
  desc: String
  id: Float!
  parentMenu: MenuInput
  title: String!
  updatedAt: DateTime!
}

type MenuObject {
  children: [MenuObject!]
  createdAt: DateTime!
  desc: String
  id: Float!
  parentMenu: MenuObject
  title: String!
  updatedAt: DateTime!
}

type MsgCodeObject {
  code: String!
  createdAt: DateTime!
  desc: String
  explanation: String!
  msg: String!
  updatedAt: DateTime!
}

type Mutation {
  createAppConfig(payload: CreateAppConfigInput!): AppConfigObject!
  createBusinessCode(payload: CreateBusinessCodeInput!): BusinessCodeObject!
  login(loginInput: LoginInput!): LoginObj!
}

type ProfileObj {
  email: EmailAddress!
  familyName: String!
  givenName: String!
  googleId: String!
  imageUrl: String!
  name: String!
}

input ProfileObjInput {
  email: EmailAddress!
  familyName: String!
  givenName: String!
  googleId: String!
  imageUrl: String!
  name: String!
}

type Query {
  appConfig(name: String!): AppConfigObject!
  businessCode(code: String!): BusinessCodeObject
  businessCodeList(filters: ListBusinessCodeInput!): [BusinessCodeObject!]
  find: UserAppConfigsObject!
  login(email: String!, password: String!): Result!
  msgCode(code: String!): MsgCodeObject
  msgCodeList(filters: ListMsgCodeInput!): [MsgCodeObject!]!
  sayHello: String!
}

type Result {
  result: Boolean!
}

type TokenObj {
  access_token: String!
  expires_at: Float!
  expires_in: Float!
  first_issued_at: Float!
  id_token: String!
}

input TokenObjInput {
  access_token: String!
  expires_at: Float!
  expires_in: Float!
  first_issued_at: Float!
  id_token: String!
}

input UserAppConfigsInput {
  appConfig: AppConfigInput!
  createdAt: DateTime!
  desc: String
  updatedAt: DateTime!
  user: UserInput!
  value: String!
}

type UserAppConfigsObject {
  appConfig: AppConfigObject!
  createdAt: DateTime!
  desc: String
  updatedAt: DateTime!
  user: UserObject!
  value: String!
}

input UserInput {
  createdAt: DateTime!
  desc: String
  email: EmailAddress!
  menus: [MenuInput!]
  name: String!
  updatedAt: DateTime!
  userAppConfigs: [UserAppConfigsInput!]
}

type UserObject {
  createdAt: DateTime!
  desc: String
  email: EmailAddress!
  menus: [MenuObject!]
  name: String!
  updatedAt: DateTime!
  userAppConfigs: [UserAppConfigsObject!]
}

""""""
scalar ValidatorScalar
